{"version":3,"sources":["components/tagList.js","hooks/useLocalStorage.js","hooks/useFetch.js","components/addToFavorites.js","components/feed.js","utils.js","components/pagination.js","components/errorMessage.js","components/loading.js","components/popularTags.js","contexts/currentUser.js","components/feedToggler.js","components/banner.js","pages/globalFeed/index.js","pages/yourFeed/index.js","pages/tagFeed/index.js","pages/article/index.js","components/backendErrorMessages.js","pages/authentication/index.js","components/articleForm.js","pages/createArticle/index.js","pages/editArticle/index.js","pages/settings/index.js","pages/userProfile/components/userArticles.js","pages/userProfile/index.js","routes.js","components/topbar.js","components/currentUserChecker.js","index.js"],"names":["TagList","tags","className","map","tag","key","initialValue","useState","localStorage","getItem","value","setValue","useEffect","setItem","url","isLoading","setIsLoading","response","setResponse","error","setError","options","setOptions","useLocalStorage","token","doFetch","useCallback","skipGetResponseAfterDestroy","requestOptions","headers","authorization","axios","then","res","data","catch","AddToFavorites","isFavorited","favoritesCount","articleSlug","apiUrl","useFetch","isFavoritedWithResponse","article","favorited","favoritesCountWithResponse","buttonClasses","classNames","btn","onClick","event","preventDefault","method","Feed","articles","index","to","author","username","src","image","alt","createdAt","slug","title","description","tagList","getPaginator","search","parsedSearch","parse","currentPage","page","Number","offset","PaginationItem","liClasses","active","Pagination","start","end","total","limit","pagesCount","Math","ceil","pages","Array","keys","el","ErrorMessage","Loading","PopularTags","initialState","isLoggedIn","currentUser","reducer","state","action","type","payload","CurrentUserContext","createContext","CurrentUserProvider","children","useReducer","Provider","FeedToggler","tagName","useContext","currentUserState","exact","Banner","GlobalFeed","location","match","stringifiedParams","stringify","currentUrl","articlesCount","YourFeed","TagFeed","params","console","log","Article","props","fetchArticleResponse","fetchArticleError","fetchArticleIsLoading","deleteArticleResponse","doDeleteArticle","isSuccessfullDelete","setIsSuccessfullDelete","body","BackendErrorMessages","backendErrors","errorMessages","Object","name","messages","join","errorMessage","Authentication","isLogin","path","pageTitle","descriptionLink","descriptionText","email","setEmail","password","setPassword","setUsername","isSuccessfullSubmit","setIsSuccessfullSubmit","setToken","dispatch","user","errors","onSubmit","placeholder","onChange","e","target","disabled","ArticleForm","initialValues","setTitle","setDescription","setBody","setTagList","split","rows","CreateArticle","EditArticle","updateArticleResponse","updateArticleError","doUpdateArticle","doFetchArticle","setInitialValues","Settings","setName","setImage","bio","setBio","successfullLogout","setIsSuccessfullLogout","UserArticles","isFavorites","pathname","includes","getApiUrl","UserProfile","profile","Routes","component","Topbar","userImage","CurrentUserChecker","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.12dd16c8.chunk.js","sourcesContent":["import React from 'react'\n\nconst TagList = ({tags}) => {\n  return (\n    <ul className=\"tag-list\">\n      {tags.map(tag => (\n        <li key={tag} className=\"tag-default tag pill tag-outline\">\n          {tag}\n        </li>\n      ))}\n    </ul>\n  )\n}\n\nexport default TagList\n","import {useState, useEffect} from 'react'\nexport default (key, initialValue = '') => {\n  const [value, setValue] = useState(() => {\n    return localStorage.getItem(key) || initialValue\n  })\n\n  useEffect(() => {\n    localStorage.setItem(key, value)\n  }, [value, key])\n\n  return [value, setValue]\n}\n","import {useState, useEffect, useCallback} from 'react'\nimport axios from 'axios'\n\nimport useLocalStorage from './useLocalStorage'\n\nexport default url => {\n  const baseUrl = 'https://conduit.productionready.io/api'\n  const [isLoading, setIsLoading] = useState(false)\n  const [response, setResponse] = useState(null)\n  const [error, setError] = useState(null)\n  const [options, setOptions] = useState({})\n  const [token] = useLocalStorage('token')\n\n  const doFetch = useCallback((options = {}) => {\n    setOptions(options)\n    setIsLoading(true)\n  }, [])\n\n  useEffect(() => {\n    let skipGetResponseAfterDestroy = false\n    if (!isLoading) {\n      return\n    }\n\n    const requestOptions = {\n      ...options,\n      ...{\n        headers: {\n          authorization: token ? `Token ${token}` : ''\n        }\n      }\n    }\n\n    axios(baseUrl + url, requestOptions)\n      .then(res => {\n        if (!skipGetResponseAfterDestroy) {\n          setResponse(res.data)\n          setIsLoading(false)\n        }\n      })\n      .catch(error => {\n        if (!skipGetResponseAfterDestroy) {\n          setError(error.response.data)\n          setIsLoading(false)\n        }\n      })\n    return () => {\n      skipGetResponseAfterDestroy = true\n    }\n  }, [isLoading, url, options, token])\n\n  return [{isLoading, response, error}, doFetch]\n}\n","import React from 'react'\nimport classNames from 'classnames'\n\nimport useFetch from '../hooks/useFetch'\n\nconst AddToFavorites = ({isFavorited, favoritesCount, articleSlug}) => {\n  const apiUrl = `/articles/${articleSlug}/favorite`\n  const [{response}, doFetch] = useFetch(apiUrl)\n  const isFavoritedWithResponse = response\n    ? response.article.favorited\n    : isFavorited\n  const favoritesCountWithResponse = response\n    ? response.article.favoritesCount\n    : favoritesCount\n  const buttonClasses = classNames({\n    btn: true,\n    'btn-sm': true,\n    'btn-primary': isFavoritedWithResponse,\n    'btn-outline-primary': !isFavoritedWithResponse\n  })\n  const handleLike = event => {\n    event.preventDefault()\n    doFetch({\n      method: isFavoritedWithResponse ? 'delete' : 'post'\n    })\n  }\n  return (\n    <button className={buttonClasses} onClick={handleLike}>\n      <i className=\"ion-heart\"></i>\n      <span>&nbsp; {favoritesCountWithResponse}</span>\n    </button>\n  )\n}\n\nexport default AddToFavorites\n","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nimport TagList from './tagList'\nimport AddToFavorites from './addToFavorites'\n\nconst Feed = ({articles}) => {\n  return (\n    <div>\n      {articles.map((article, index) => (\n        <div className=\"article-preview\" key={index}>\n          <div className=\"article-meta\">\n            <Link to={`/profiles/${article.author.username}`}>\n              <img src={article.author.image} alt=\"\" />\n            </Link>\n            <div className=\"info\">\n              <Link\n                to={`/profiles/${article.author.username}`}\n                className=\"author\"\n              >\n                {article.author.username}\n              </Link>\n              <span className=\"date\">{article.createdAt}</span>\n            </div>\n            <div className=\"pull-xs-right\">\n              <AddToFavorites\n                isFavorited={article.favorited}\n                favoritesCount={article.favoritesCount}\n                articleSlug={article.slug}\n              />\n            </div>\n          </div>\n          <Link to={`/articles/${article.slug}`} className=\"preview-link\">\n            <h1>{article.title}</h1>\n            <p>{article.description}</p>\n            <span>Read more...</span>\n            <TagList tags={article.tagList} />\n          </Link>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default Feed\n","import {parse} from 'query-string'\n\nexport const limit = 10\n\nexport const range = (start, end) => {\n  return [...Array(end).keys()].map(el => el + start)\n}\n\nexport const getPaginator = search => {\n  const parsedSearch = parse(search)\n  const currentPage = parsedSearch.page ? Number(parsedSearch.page) : 1\n  const offset = currentPage * limit - limit\n  return {currentPage, offset}\n}\n","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport classNames from 'classnames'\n\nimport {range} from '../utils'\n\nconst PaginationItem = ({page, currentPage, url}) => {\n  const liClasses = classNames({\n    'page-item': true,\n    active: currentPage === page\n  })\n  return (\n    <li className={liClasses}>\n      <Link to={`${url}?page=${page}`} className=\"page-link\">\n        {page}\n      </Link>\n    </li>\n  )\n}\n\nconst Pagination = ({total, limit, url, currentPage}) => {\n  const pagesCount = Math.ceil(total / limit)\n  const pages = range(1, pagesCount)\n\n  return (\n    <ul className=\"pagination\">\n      {pages.map(page => (\n        <PaginationItem\n          page={page}\n          key={page}\n          currentPage={currentPage}\n          url={url}\n        />\n      ))}\n    </ul>\n  )\n}\n\nexport default Pagination\n","import React from 'react'\n\nconst ErrorMessage = () => {\n  return <div>Something bad happened...</div>\n}\n\nexport default ErrorMessage\n","import React from 'react'\n\nconst Loading = () => {\n  return <div>Loading...</div>\n}\n\nexport default Loading\n","import React, {useEffect} from 'react'\nimport {Link} from 'react-router-dom'\n\nimport useFetch from '../hooks/useFetch'\nimport ErrorMessage from '../components/errorMessage'\nimport Loading from '../components/loading'\n\nconst PopularTags = () => {\n  const [{response, isLoading, error}, doFetch] = useFetch('/tags')\n\n  useEffect(() => {\n    doFetch()\n  }, [doFetch])\n\n  if (isLoading || !response) {\n    return <Loading />\n  }\n\n  if (error) {\n    return <ErrorMessage />\n  }\n\n  return (\n    <div className=\"sidebar\">\n      <p>Popular tags</p>\n      <div className=\"tag-list\">\n        {response.tags.map(tag => (\n          <Link to={`/tags/${tag}`} className=\"tag-default tag-pill\" key={tag}>\n            {tag}\n          </Link>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default PopularTags\n","import React, {createContext, useReducer} from 'react'\n\nconst initialState = {\n  isLoading: false,\n  isLoggedIn: null,\n  currentUser: null\n}\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'LOADING':\n      return {...state, isLoading: true}\n    case 'SET_AUTHORIZED':\n      return {\n        ...state,\n        isLoggedIn: true,\n        isLoading: false,\n        currentUser: action.payload\n      }\n    case 'SET_UNAUTHORIZED':\n      return {\n        ...state,\n        isLoggedIn: false,\n        currentUser: null\n      }\n    default:\n      return state\n  }\n}\n\nexport const CurrentUserContext = createContext()\n\nexport const CurrentUserProvider = ({children}) => {\n  const value = useReducer(reducer, initialState)\n\n  return (\n    <CurrentUserContext.Provider value={value}>\n      {children}\n    </CurrentUserContext.Provider>\n  )\n}\n","import React, {useContext} from 'react'\nimport {NavLink} from 'react-router-dom'\n\nimport {CurrentUserContext} from '../contexts/currentUser'\n\nconst FeedToggler = ({tagName}) => {\n  const [currentUserState] = useContext(CurrentUserContext)\n\n  return (\n    <div className=\"feed-toggler\">\n      <ul className=\"nav nav-pills outline-active\">\n        {currentUserState.isLoggedIn && (\n          <li className=\"nav-item\">\n            <NavLink to=\"/feed\" className=\"nav-link\">\n              Your feed\n            </NavLink>\n          </li>\n        )}\n        <li className=\"nav-item\">\n          <NavLink to=\"/\" className=\"nav-link\" exact>\n            Global feed\n          </NavLink>\n        </li>\n        {tagName && (\n          <li className=\"nav-item\">\n            <NavLink to={`/tags/${tagName}`} className=\"nav-link\" exact>\n              <i className=\"ion-pound\"></i>\n              {tagName}\n            </NavLink>\n          </li>\n        )}\n      </ul>\n    </div>\n  )\n}\n\nexport default FeedToggler\n","import React from 'react'\n\nconst Banner = () => {\n  return (\n    <div className=\"banner\">\n      <h1>Medium Clone</h1>\n      <p>A place to share knowledge</p>\n    </div>\n  )\n}\n\nexport default Banner\n","import React, {useEffect, Fragment} from 'react'\nimport {stringify} from 'query-string'\n\nimport Feed from '../../components/feed'\nimport useFetch from '../../hooks/useFetch'\nimport Pagination from '../../components/pagination'\nimport {getPaginator, limit} from '../../utils'\nimport PopularTags from '../../components/popularTags'\nimport Loading from '../../components/loading'\nimport ErrorMessage from '../../components/errorMessage'\nimport FeedToggler from '../../components/feedToggler'\nimport Banner from '../../components/banner'\n\nconst GlobalFeed = ({location, match}) => {\n  const {offset, currentPage} = getPaginator(location.search)\n  const stringifiedParams = stringify({\n    limit,\n    offset\n  })\n  const apiUrl = `/articles?${stringifiedParams}`\n  const currentUrl = match.url\n  const [{response, error, isLoading}, doFetch] = useFetch(apiUrl)\n\n  useEffect(() => {\n    doFetch()\n  }, [currentPage, doFetch])\n\n  return (\n    <div className=\"home-page\">\n      <Banner />\n      <div className=\"container page\">\n        <div className=\"row\">\n          <div className=\"col-md-9\">\n            <FeedToggler />\n            {isLoading && <Loading />}\n            {error && <ErrorMessage />}\n            {!isLoading && response && (\n              <Fragment>\n                <Feed articles={response.articles} />\n                <Pagination\n                  total={response.articlesCount}\n                  limit={limit}\n                  url={currentUrl}\n                  currentPage={currentPage}\n                />\n              </Fragment>\n            )}\n          </div>\n          <div className=\"col-md-3\">\n            <PopularTags />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default GlobalFeed\n","import React, {useEffect, Fragment} from 'react'\nimport {stringify} from 'query-string'\n\nimport Feed from '../../components/feed'\nimport useFetch from '../../hooks/useFetch'\nimport Pagination from '../../components/pagination'\nimport {getPaginator, limit} from '../../utils'\nimport PopularTags from '../../components/popularTags'\nimport Loading from '../../components/loading'\nimport ErrorMessage from '../../components/errorMessage'\nimport FeedToggler from '../../components/feedToggler'\nimport Banner from '../../components/banner'\n\nconst YourFeed = ({location, match}) => {\n  const {offset, currentPage} = getPaginator(location.search)\n  const stringifiedParams = stringify({\n    limit,\n    offset\n  })\n  const apiUrl = `/articles/feed?${stringifiedParams}`\n  const currentUrl = match.url\n  const [{response, error, isLoading}, doFetch] = useFetch(apiUrl)\n\n  useEffect(() => {\n    doFetch()\n  }, [currentPage, doFetch])\n\n  return (\n    <div className=\"home-page\">\n      <Banner />\n      <div className=\"container page\">\n        <div className=\"row\">\n          <div className=\"col-md-9\">\n            <FeedToggler />\n            {isLoading && <Loading />}\n            {error && <ErrorMessage />}\n            {!isLoading && response && (\n              <Fragment>\n                <Feed articles={response.articles} />\n                <Pagination\n                  total={response.articlesCount}\n                  limit={limit}\n                  url={currentUrl}\n                  currentPage={currentPage}\n                />\n              </Fragment>\n            )}\n          </div>\n          <div className=\"col-md-3\">\n            <PopularTags />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default YourFeed\n","import React, {useEffect, Fragment} from 'react'\nimport {stringify} from 'query-string'\n\nimport Feed from '../../components/feed'\nimport useFetch from '../../hooks/useFetch'\nimport Pagination from '../../components/pagination'\nimport {getPaginator, limit} from '../../utils'\nimport PopularTags from '../../components/popularTags'\nimport Loading from '../../components/loading'\nimport ErrorMessage from '../../components/errorMessage'\nimport FeedToggler from '../../components/feedToggler'\nimport Banner from '../../components/banner'\n\nconst TagFeed = ({location, match}) => {\n  const tagName = match.params.slug\n  console.log('tagName', tagName)\n  const {offset, currentPage} = getPaginator(location.search)\n  const stringifiedParams = stringify({\n    limit,\n    offset,\n    tag: tagName\n  })\n  const apiUrl = `/articles?${stringifiedParams}`\n  const currentUrl = match.url\n  const [{response, error, isLoading}, doFetch] = useFetch(apiUrl)\n\n  useEffect(() => {\n    doFetch()\n  }, [currentPage, doFetch])\n\n  return (\n    <div className=\"home-page\">\n      <Banner />\n      <div className=\"container page\">\n        <div className=\"row\">\n          <div className=\"col-md-9\">\n            <FeedToggler tagName={tagName} />\n            {isLoading && <Loading />}\n            {error && <ErrorMessage />}\n            {!isLoading && response && (\n              <Fragment>\n                <Feed articles={response.articles} />\n                <Pagination\n                  total={response.articlesCount}\n                  limit={limit}\n                  url={currentUrl}\n                  currentPage={currentPage}\n                />\n              </Fragment>\n            )}\n          </div>\n          <div className=\"col-md-3\">\n            <PopularTags />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default TagFeed\n","import React, {useEffect, useContext, useState} from 'react'\nimport {Link, Redirect} from 'react-router-dom'\n\nimport useFetch from '../../hooks/useFetch'\nimport Loading from '../../components/loading'\nimport ErrorMessage from '../../components/errorMessage'\nimport TagList from '../../components/tagList'\nimport {CurrentUserContext} from '../../contexts/currentUser'\n\nconst Article = props => {\n  const slug = props.match.params.slug\n  const apiUrl = `/articles/${slug}`\n  const [\n    {\n      response: fetchArticleResponse,\n      error: fetchArticleError,\n      isLoading: fetchArticleIsLoading\n    },\n    doFetch\n  ] = useFetch(apiUrl)\n  const [{response: deleteArticleResponse}, doDeleteArticle] = useFetch(apiUrl)\n  const [currentUserState] = useContext(CurrentUserContext)\n  const [isSuccessfullDelete, setIsSuccessfullDelete] = useState(false)\n\n  const isAuthor = () => {\n    if (currentUserState.isLoggedIn === null || !fetchArticleResponse) {\n      return false\n    }\n\n    return (\n      currentUserState.currentUser.username ===\n      fetchArticleResponse.article.author.username\n    )\n  }\n\n  const deleteArticle = () => {\n    doDeleteArticle({\n      method: 'delete'\n    })\n  }\n\n  useEffect(() => {\n    doFetch()\n  }, [doFetch])\n\n  useEffect(() => {\n    if (!deleteArticleResponse) {\n      return\n    }\n\n    setIsSuccessfullDelete(true)\n  }, [deleteArticleResponse])\n\n  if (isSuccessfullDelete) {\n    return <Redirect to=\"/\" />\n  }\n\n  return (\n    <div className=\"article-page\">\n      <div className=\"banner\">\n        {!fetchArticleIsLoading && fetchArticleResponse && (\n          <div className=\"container\">\n            <h1>{fetchArticleResponse.article.title}</h1>\n            <div className=\"article-meta\">\n              <Link\n                to={`/profiles/${fetchArticleResponse.article.author.username}`}\n              >\n                <img src={fetchArticleResponse.article.author.image} alt=\"\" />\n              </Link>\n              <div className=\"info\">\n                <Link\n                  to={`/profiles/${fetchArticleResponse.article.author.username}`}\n                >\n                  {fetchArticleResponse.article.author.username}\n                </Link>\n                <span className=\"date\">\n                  {fetchArticleResponse.article.createdAt}\n                </span>\n              </div>\n              {isAuthor() && (\n                <span>\n                  <Link\n                    to={`/articles/${fetchArticleResponse.article.slug}/edit`}\n                    className=\"btn btn-outline-secondary btn-sm\"\n                  >\n                    <i className=\"ion-edit\"></i>\n                    Edit Article\n                  </Link>\n                  <button\n                    className=\"btn btn-outline-danger btn-sm\"\n                    onClick={deleteArticle}\n                  >\n                    <i className=\"ion-trash-a\"></i>\n                    Delete Article\n                  </button>\n                </span>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n      <div className=\"container page\">\n        {fetchArticleIsLoading && <Loading />}\n        {fetchArticleError && <ErrorMessage />}\n        {!fetchArticleIsLoading && fetchArticleResponse && (\n          <div className=\"row article-content\">\n            <div>\n              <p>{fetchArticleResponse.article.body}</p>\n            </div>\n            <TagList tags={fetchArticleResponse.article.tagList} />\n          </div>\n        )}\n        <hr />\n      </div>\n    </div>\n  )\n}\n\nexport default Article\n","import React from 'react'\n\nconst BackendErrorMessages = ({backendErrors}) => {\n  const errorMessages = Object.keys(backendErrors).map(name => {\n    const messages = backendErrors[name].join(' ')\n    return `${name} ${messages}`\n  })\n  return (\n    <ul className=\"error-messages\">\n      {errorMessages.map(errorMessage => {\n        return <li key={errorMessage}>{errorMessage}</li>\n      })}\n    </ul>\n  )\n}\n\nexport default BackendErrorMessages\n","import React, {useState, useEffect, useContext} from 'react'\nimport {Link, Redirect} from 'react-router-dom'\n\nimport useFetch from '../../hooks/useFetch'\nimport useLocalStorage from '../../hooks/useLocalStorage'\nimport {CurrentUserContext} from '../../contexts/currentUser'\nimport BackendErrorMessages from '../../components/backendErrorMessages'\n\nconst Authentication = props => {\n  const isLogin = props.match.path === '/login'\n  const pageTitle = isLogin ? 'Sign In' : 'Sign Up'\n  const descriptionLink = isLogin ? '/register' : '/login'\n  const descriptionText = isLogin ? 'Need an account?' : 'Have an account?'\n  const apiUrl = isLogin ? '/users/login' : '/users'\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [username, setUsername] = useState('')\n  const [isSuccessfullSubmit, setIsSuccessfullSubmit] = useState(false)\n  const [{isLoading, response, error}, doFetch] = useFetch(apiUrl)\n  const [, setToken] = useLocalStorage('token')\n  const [, dispatch] = useContext(CurrentUserContext)\n\n  const handleSubmit = event => {\n    event.preventDefault()\n\n    const user = isLogin ? {email, password} : {email, password, username}\n\n    doFetch({\n      method: 'post',\n      data: {\n        user\n      }\n    })\n    console.log('values', email, password)\n  }\n\n  useEffect(() => {\n    if (!response) {\n      return\n    }\n    console.log('response', response)\n    setToken(response.user.token)\n    setIsSuccessfullSubmit(true)\n    dispatch({type: 'SET_AUTHORIZED', payload: response.user})\n  }, [response, setToken, dispatch])\n\n  if (isSuccessfullSubmit) {\n    return <Redirect to=\"/\" />\n  }\n\n  return (\n    <div className=\"auth-page\">\n      <div className=\"container page\">\n        <div className=\"row\">\n          <div className=\"col-md-6 offset-md-3 col-xs-12\">\n            <h1 className=\"text-xs-center\">{pageTitle}</h1>\n            <p className=\"text-xs-center\">\n              <Link to={descriptionLink}>{descriptionText}</Link>\n            </p>\n            {error && <BackendErrorMessages backendErrors={error.errors} />}\n            <form onSubmit={handleSubmit}>\n              <fieldset>\n                {!isLogin && (\n                  <fieldset className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className=\"form-control form-control-lg\"\n                      placeholder=\"Username\"\n                      value={username}\n                      onChange={e => setUsername(e.target.value)}\n                    />\n                  </fieldset>\n                )}\n                <fieldset className=\"form-group\">\n                  <input\n                    type=\"email\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Email\"\n                    value={email}\n                    onChange={e => setEmail(e.target.value)}\n                  />\n                </fieldset>\n                <fieldset className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Password\"\n                    value={password}\n                    onChange={e => setPassword(e.target.value)}\n                  />\n                </fieldset>\n                <button\n                  disabled={isLoading}\n                  className=\"btn btn-lg btn-primary pull-xs-right\"\n                  type=\"submit\"\n                >\n                  {pageTitle}\n                </button>\n              </fieldset>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Authentication\n","import React, {useState, useEffect} from 'react'\n\nimport BackendErrorMessages from './backendErrorMessages'\n\nconst ArticleForm = ({onSubmit, errors, initialValues}) => {\n  const [title, setTitle] = useState('')\n  const [description, setDescription] = useState('')\n  const [body, setBody] = useState('')\n  const [tagList, setTagList] = useState('')\n\n  const handleSubmit = event => {\n    event.preventDefault()\n\n    const article = {\n      title,\n      description,\n      body,\n      tagList: tagList.split(' ')\n    }\n\n    onSubmit(article)\n  }\n\n  useEffect(() => {\n    if (!initialValues) {\n      return\n    }\n\n    setTitle(initialValues.title)\n    setDescription(initialValues.description)\n    setBody(initialValues.body)\n    setTagList(initialValues.tagList)\n  }, [initialValues])\n\n  console.log('fields', title, body, description, tagList)\n\n  return (\n    <div className=\"editor-page\">\n      <div className=\"container page\">\n        <div className=\"row\">\n          <div className=\"col-md-10 offset-md-1 col-xs-12\">\n            {errors && <BackendErrorMessages backendErrors={errors} />}\n            <form onSubmit={handleSubmit}>\n              <fieldset>\n                <fieldset className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Article title\"\n                    value={title}\n                    onChange={e => setTitle(e.target.value)}\n                  />\n                </fieldset>\n                <fieldset className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"What is this article about?\"\n                    value={description}\n                    onChange={e => setDescription(e.target.value)}\n                  />\n                </fieldset>\n                <fieldset className=\"form-group\">\n                  <textarea\n                    className=\"form-control\"\n                    rows=\"8\"\n                    placeholder=\"Write your article (in markdown)\"\n                    value={body}\n                    onChange={e => setBody(e.target.value)}\n                  ></textarea>\n                </fieldset>\n                <fieldset className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Enter tags\"\n                    value={tagList}\n                    onChange={e => setTagList(e.target.value)}\n                  />\n                </fieldset>\n                <fieldset className=\"form-group\">\n                  <button\n                    type=\"submit\"\n                    className=\"btn btn-lg pull-xs-right btn-primary\"\n                  >\n                    Publish Article\n                  </button>\n                </fieldset>\n              </fieldset>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ArticleForm\n\n","import React, {useState, useEffect, useContext} from 'react'\nimport {Redirect} from 'react-router-dom'\n\nimport ArticleForm from '../../components/articleForm'\nimport useFetch from '../../hooks/useFetch'\nimport {CurrentUserContext} from '../../contexts/currentUser'\n\nconst CreateArticle = () => {\n  const apiUrl = '/articles'\n  const [isSuccessfullSubmit, setIsSuccessfullSubmit] = useState(false)\n  const [{response, error}, doFetch] = useFetch(apiUrl)\n  const [currentUserState] = useContext(CurrentUserContext)\n\n  const onSubmit = article => {\n    doFetch({\n      method: 'post',\n      data: {\n        article\n      }\n    })\n  }\n  const initialValues = {\n    title: '',\n    description: '',\n    body: '',\n    tagList: ''\n  }\n\n  useEffect(() => {\n    if (!response) {\n      return\n    }\n    setIsSuccessfullSubmit(true)\n  }, [response])\n\n  if (currentUserState.isLoggedIn === null) {\n    return null\n  }\n\n  if (isSuccessfullSubmit || currentUserState.isLoggedIn === false) {\n    return <Redirect to=\"/\" />\n  }\n\n  return (\n    <div>\n      <ArticleForm\n        onSubmit={onSubmit}\n        initialValues={initialValues}\n        errors={(error && error.errors) || {}}\n      />\n    </div>\n  )\n}\n\nexport default CreateArticle\n","import React, {useState, useEffect, useContext} from 'react'\nimport {Redirect} from 'react-router-dom'\n\nimport ArticleForm from '../../components/articleForm'\nimport useFetch from '../../hooks/useFetch'\nimport {CurrentUserContext} from '../../contexts/currentUser'\n\nconst EditArticle = ({match}) => {\n  const slug = match.params.slug\n  const apiUrl = `/articles/${slug}`\n  const [isSuccessfullSubmit, setIsSuccessfullSubmit] = useState(false)\n  const [\n    {response: updateArticleResponse, error: updateArticleError},\n    doUpdateArticle\n  ] = useFetch(apiUrl)\n  const [{response: fetchArticleResponse}, doFetchArticle] = useFetch(apiUrl)\n  const [currentUserState] = useContext(CurrentUserContext)\n  const [initialValues, setInitialValues] = useState(null)\n\n  const onSubmit = article => {\n    doUpdateArticle({\n      method: 'put',\n      data: {\n        article\n      }\n    })\n  }\n\n  useEffect(() => {\n    doFetchArticle()\n  }, [doFetchArticle])\n\n  useEffect(() => {\n    if (!fetchArticleResponse) {\n      return\n    }\n\n    setInitialValues({\n      title: fetchArticleResponse.article.title,\n      description: fetchArticleResponse.article.description,\n      body: fetchArticleResponse.article.body,\n      tagList: fetchArticleResponse.article.tagList.join(' ')\n    })\n  }, [fetchArticleResponse])\n\n  useEffect(() => {\n    if (!updateArticleResponse) {\n      return\n    }\n    setIsSuccessfullSubmit(true)\n  }, [updateArticleResponse])\n\n  if (currentUserState.isLoggedIn === null) {\n    return null\n  }\n\n  if (currentUserState.isLoggedIn === false) {\n    return <Redirect to=\"/\" />\n  }\n\n  if (isSuccessfullSubmit) {\n    return <Redirect to={`/articles/${slug}`} />\n  }\n\n  return (\n    <div>\n      <ArticleForm\n        onSubmit={onSubmit}\n        initialValues={initialValues}\n        errors={(updateArticleError && updateArticleError.errors) || {}}\n      />\n    </div>\n  )\n}\n\nexport default EditArticle\n","import React, {useState, useContext, useEffect} from 'react'\nimport {Redirect} from 'react-router-dom'\n\nimport {CurrentUserContext} from '../../contexts/currentUser'\nimport useFetch from '../../hooks/useFetch'\nimport BackendErrorMessages from '../../components/backendErrorMessages'\nimport useLocalStorage from '../../hooks/useLocalStorage'\n\nconst Settings = () => {\n  const apiUrl = '/user'\n  const [{response, error}, doFetch] = useFetch(apiUrl)\n  const [name, setName] = useState('')\n  const [image, setImage] = useState('')\n  const [bio, setBio] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [currentUserState, dispatch] = useContext(CurrentUserContext)\n  const [, setToken] = useLocalStorage('token')\n  const [successfullLogout, setIsSuccessfullLogout] = useState(false)\n\n  const handleSubmit = event => {\n    event.preventDefault()\n    doFetch({\n      method: 'put',\n      data: {\n        user: {\n          ...currentUserState.currentUser,\n          image,\n          bio,\n          username: name,\n          email,\n          password\n        }\n      }\n    })\n  }\n  const logout = event => {\n    event.preventDefault()\n    setToken('')\n    dispatch({type: 'SET_UNAUTHORIZED'})\n    setIsSuccessfullLogout(true)\n  }\n\n  useEffect(() => {\n    if (!currentUserState.currentUser) {\n      return\n    }\n    const currentUser = currentUserState.currentUser\n\n    setName(currentUser.username)\n    setImage(currentUser.image)\n    setBio(currentUser.bio)\n    setEmail(currentUser.email)\n  }, [currentUserState.currentUser])\n\n  useEffect(() => {\n    if (!response) {\n      return\n    }\n\n    dispatch({type: 'SET_AUTHORIZED', payload: response.user})\n  }, [response, dispatch])\n\n  if (successfullLogout) {\n    return <Redirect to=\"/\" />\n  }\n\n  return (\n    <div className=\"settings-page\">\n      <div className=\"container page\">\n        <div className=\"row\">\n          <div className=\"col-md-6 offset-md-3 col-xs-12\">\n            <h1 className=\"text-xs-center\">Your settings</h1>\n            {error && <BackendErrorMessages backendErrors={error.errors} />}\n            <form onSubmit={handleSubmit}>\n              <fieldset>\n                <fieldset className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"URL of profile picture\"\n                    value={image}\n                    onChange={e => setImage(e.target.value)}\n                  />\n                </fieldset>\n                <fieldset className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Username\"\n                    value={name}\n                    onChange={e => setName(e.target.value)}\n                  />\n                </fieldset>\n                <fieldset className=\"form-group\">\n                  <textarea\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Short bio\"\n                    value={bio}\n                    rows=\"8\"\n                    onChange={e => setBio(e.target.value)}\n                  ></textarea>\n                </fieldset>\n                <fieldset className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Email\"\n                    value={email}\n                    onChange={e => setEmail(e.target.value)}\n                  />\n                </fieldset>\n                <fieldset className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"New password\"\n                    value={password}\n                    onChange={e => setPassword(e.target.value)}\n                  />\n                </fieldset>\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-lg btn-primary pull-xs-right\"\n                >\n                  Update settings\n                </button>\n              </fieldset>\n            </form>\n            <hr />\n            <button className=\"btn btn-outline-danger\" onClick={logout}>\n              Or click here to logout.\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Settings\n","import React, {useEffect, Fragment} from 'react'\nimport {stringify} from 'query-string'\n\nimport {getPaginator, limit} from '../../../utils'\nimport useFetch from '../../../hooks/useFetch'\nimport Loading from '../../../components/loading'\nimport ErrorMessage from '../../../components/errorMessage'\nimport Feed from '../../../components/feed'\nimport Pagination from '../../../components/pagination'\n\nconst getApiUrl = ({username, offset, isFavorites}) => {\n  const params = isFavorites\n    ? {\n        limit,\n        offset,\n        favorited: username\n      }\n    : {\n        limit,\n        offset,\n        author: username\n      }\n  return `/articles?${stringify(params)}`\n}\n\nconst UserArticles = ({username, location, url}) => {\n  const isFavorites = location.pathname.includes('favorites')\n  const {offset, currentPage} = getPaginator(location.search)\n  const apiUrl = getApiUrl({username, offset, isFavorites})\n  const [{response, isLoading, error}, doFetch] = useFetch(apiUrl)\n\n  useEffect(() => {\n    doFetch()\n  }, [doFetch, isFavorites, currentPage])\n\n  return (\n    <div>\n      {isLoading && <Loading />}\n      {error && <ErrorMessage />}\n      {!isLoading && response && (\n        <Fragment>\n          <Feed articles={response.articles} />\n          <Pagination\n            total={response.articlesCount}\n            limit={limit}\n            url={url}\n            currentPage={currentPage}\n          />\n        </Fragment>\n      )}\n    </div>\n  )\n}\n\nexport default UserArticles\n","import React, {useEffect} from 'react'\nimport {NavLink} from 'react-router-dom'\n\nimport useFetch from '../../hooks/useFetch'\nimport UserArticles from './components/userArticles'\n\nconst UserProfile = ({match, location}) => {\n  const slug = match.params.slug\n  const apiUrl = `/profiles/${slug}`\n  const [{response}, doFetch] = useFetch(apiUrl)\n\n  useEffect(() => {\n    doFetch()\n  }, [doFetch])\n\n  if (!response) {\n    return null\n  }\n\n  return (\n    <div className=\"profile-page\">\n      <div className=\"user-info\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-xs-12 col-md-10 offset-md-1\">\n              <img className=\"user-img\" alt=\"\" src={response.profile.image} />\n              <h4>{response.profile.username}</h4>\n              <p>{response.profile.bio}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-xs-12 col-md-10 offset-md-1\">\n            <div className=\"articles-toggle\">\n              <ul className=\"nav nav-pills outline-active\">\n                <li className=\"nav-item\">\n                  <NavLink\n                    exact\n                    to={`/profiles/${response.profile.username}`}\n                    className=\"nav-link\"\n                  >\n                    My Posts\n                  </NavLink>\n                </li>\n                <li className=\"nav-item\">\n                  <NavLink\n                    to={`/profiles/${response.profile.username}/favorites`}\n                    className=\"nav-link\"\n                  >\n                    Favorites Posts\n                  </NavLink>\n                </li>\n              </ul>\n            </div>\n            <UserArticles\n              username={response.profile.username}\n              location={location}\n              url={match.url}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default UserProfile\n","import React from 'react'\nimport {Switch, Route} from 'react-router-dom'\n\nimport GlobalFeed from './pages/globalFeed'\nimport YourFeed from './pages/yourFeed'\nimport TagFeed from './pages/tagFeed'\nimport Article from './pages/article'\nimport Authentication from './pages/authentication'\nimport CreateArticle from './pages/createArticle'\nimport EditArticle from './pages/editArticle'\nimport Settings from './pages/settings'\nimport UserProfile from './pages/userProfile'\n\nconst Routes = () => {\n  return (\n    <Switch>\n      <Route path=\"/\" component={GlobalFeed} exact />\n      <Route path=\"/profiles/:slug\" component={UserProfile} />\n      <Route path=\"/profiles/:slug/favorites\" component={UserProfile} />\n      <Route path=\"/settings\" component={Settings} exact />\n      <Route path=\"/articles/new\" component={CreateArticle} />\n      <Route path=\"/articles/:slug/edit\" component={EditArticle} />\n      <Route path=\"/feed\" component={YourFeed} exact />\n      <Route path=\"/tags/:slug\" component={TagFeed} />\n      <Route path=\"/articles/:slug\" component={Article} />\n      <Route path=\"/login\" component={Authentication} />\n      <Route path=\"/register\" component={Authentication} />\n    </Switch>\n  )\n}\nexport default Routes\n","import React, {useContext, Fragment} from 'react'\nimport {NavLink, Link} from 'react-router-dom'\n\nimport {CurrentUserContext} from '../contexts/currentUser'\n\nconst Topbar = () => {\n  const [currentUserState] = useContext(CurrentUserContext)\n  const userImage =\n    (currentUserState.isLoggedIn && currentUserState.currentUser.image) ||\n    'https://static.productionready.io/images/smiley-cyrus.jpg'\n\n  return (\n    <nav className=\"navbar navbar-light\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"navbar-brand\">\n          Medium\n        </Link>\n        <ul className=\"nav navbar-nav pull-xs-right\">\n          <li className=\"nav-item\">\n            <NavLink to=\"/\" className=\"nav-link\" exact>\n              Home\n            </NavLink>\n          </li>\n          {currentUserState.isLoggedIn && (\n            <Fragment>\n              <li className=\"nav-item\">\n                <NavLink to=\"/articles/new\" className=\"nav-link\">\n                  <i className=\"ion-compose\" />\n                  &nbsp; New Post\n                </NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink to=\"/settings\" className=\"nav-link\">\n                  <i className=\"ion-gear-a\" />\n                  &nbsp; Settings\n                </NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink\n                  to={`/profiles/${currentUserState.currentUser.username}`}\n                  className=\"nav-link\"\n                >\n                  <img className=\"user-pic\" src={userImage} alt=\"\" />\n                  &nbsp; {currentUserState.currentUser.username}\n                </NavLink>\n              </li>\n            </Fragment>\n          )}\n          {currentUserState.isLoggedIn === false && (\n            <Fragment>\n              <li className=\"nav-item\">\n                <NavLink to=\"/login\" className=\"nav-link\">\n                  Sign in\n                </NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink to=\"/register\" className=\"nav-link\">\n                  Sign up\n                </NavLink>\n              </li>\n            </Fragment>\n          )}\n        </ul>\n      </div>\n    </nav>\n  )\n}\n\nexport default Topbar\n","import {useEffect, useContext} from 'react'\n\nimport useFetch from '../hooks/useFetch'\nimport {CurrentUserContext} from '../contexts/currentUser'\nimport useLocalStorage from '../hooks/useLocalStorage'\n\nconst CurrentUserChecker = ({children}) => {\n  const [, dispatch] = useContext(CurrentUserContext)\n  const [{response}, doFetch] = useFetch('/user')\n  const [token] = useLocalStorage('token')\n\n  useEffect(() => {\n    if (!token) {\n      dispatch({type: 'SET_UNAUTHORIZED'})\n      return\n    }\n\n    doFetch()\n    dispatch({type: 'LOADING'})\n  }, [doFetch, dispatch, token])\n\n  useEffect(() => {\n    if (!response) {\n      return\n    }\n\n    dispatch({type: 'SET_AUTHORIZED', payload: response.user})\n  }, [response, dispatch])\n  return children\n}\n\nexport default CurrentUserChecker\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {BrowserRouter as Router} from 'react-router-dom'\n\nimport Routes from './routes'\nimport Topbar from './components/topbar'\nimport {CurrentUserProvider} from './contexts/currentUser'\nimport CurrentUserChecker from './components/currentUserChecker'\n\nconst App = () => {\n  return (\n    <CurrentUserProvider>\n      <CurrentUserChecker>\n        <Router>\n          <Topbar />\n          <Routes />\n        </Router>\n      </CurrentUserChecker>\n    </CurrentUserProvider>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}